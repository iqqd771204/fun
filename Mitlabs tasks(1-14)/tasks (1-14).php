<?php 

/*Вывести на экран N случайных чисел (каждое с новой строки) из диапазона [-21, 35]*/

function number($num)
{
	for ($i=1; $i<=$num; $i++){
		echo rand(-21,35)."<br>";
	}
}

echo "Вывести на экран N случайных чисел (каждое с новой строки) из диапазона [-21, 35] <br>";
number(10);
echo "<br>";

/*Вывести на экран сумму N случайных чисел.*/

function randomSum($num)
{
	$sum=0;
	for ($i=1; $i<=$num; $i++){
		$sum+=rand();
	}
	echo "Сумма N случайных чисел - ".$sum;
}

echo "Вывести на экран сумму N случайных чисел. <br>";
randomSum(10);
echo "<br>";

/*Вывести на экран N случайных чисел (каждое с новой строки). Для каждого числа, начиная со второго, рядом выводить - больше ли оно предыдущего или меньше.*/ 

function morePrev($num)
{
	for ($i=1; $i<=$num; $i++){
		$number[$i]=rand(1,10);
	}

	$i=1;
	echo $number[1]."<br>";

	for ($j=2; $j<=count($number); $j++){
		if ($number[$j]>$number[$i]){
			echo "$number[$j] больше $number[$i] <br>";
		}elseif ($number[$j]<$number[$i]) {
			echo "$number[$j] меньше $number[$i] <br>";
		}elseif ($number[$j]==$number[$i]){
			echo "$number[$j] равно $number[$i] <br>";
		}	
		$i++;
	}
}

echo "<br>Вывести на экран N случайных чисел (каждое с новой строки). Для каждого числа, начиная со второго, рядом выводить - больше ли оно предыдущего или меньше. <br><br>";
morePrev(10);
echo "<br>";

/*Вывести на экран n-ное число Фибоначчи.*/

function fibonachi($num)
{
	for ($i=1; $i<=$num; $i++){
		$numbers[$i]=$i;
	}
	for ($i=1; $i<=$num; $i++) { 
		if ($i>=3){
			 $numbers[$i]=$numbers[$i-1]+$numbers[$i-2];
		}	
	}
	for ($i=1; $i<=count($numbers); $i++){
		echo $numbers[$i]."<br>";
	}
}

echo "Вывести на экран n-ное число Фибоначчи. <br>";
fibonachi(10);
echo "<br>";

/*Дано некоторое число длиной от 1 до 5 цифр - вывести его цифры в обратном порядке.*/

function reverse($num)
{
	if (strlen($num)>5){
		echo "В числе больше 5ти знаков!";
		return;
	}else{
		$str=(string)$num;
		for ($i=strlen($str)-1; $i>=0; $i--) { 
			echo $str[$i]."<br>";
		}	
	}
	
}

echo "<br>Дано некоторое число длиной от 1 до 5 цифр - вывести его цифры в обратном порядке.<br>";
reverse(34567);
echo "<br>";
/*Дано некоторое число длиной от 1 до 5 символов, вывести все его "нечётные" цифры в обратном порядке (аналогично предыдущей задаче), если же таких цифр не найдёт, вывести сообщение "Нечетных цифр не обнаружено!"*/

function reverseOdd($num)
{
	if (strlen($num)>5){
		echo "В числе больше 5ти знаков!";
		return;
	}else{
		$str=(string)$num;
		for ($i=strlen($str)-1; $i>=0; $i--) { 
			if ($str[$i]%2==1){
				$odd[]=$str[$i];
			}
		}	
	}
	if (isset($odd)){
		for ($i=0; $i<=count($odd)-1; $i++){
			echo $odd[$i]."<br>";
		}
	}else{
		echo "Нечетных цифр не обнаружено!";
	}
}

echo "<br>Дано некоторое число длиной от 1 до 5 символов, вывести все его 'нечётные' цифры в обратном порядке (аналогично предыдущей задаче), если же таких цифр не найдёт, вывести сообщение 'Нечетных цифр не обнаружено!'<br>";
reverseOdd(2345);
echo "<br>";

/*Задать массив из 7-ми элементов через предварительное описание типа, заполнить его случайными значениями в одном цикле, а в другом цикле вывести эти значения на экран.*/

function randomMas()
{
	$arr=array();

	for ($i=0; $i<=6; $i++){
		$arr[$i]=rand(1,10);
	}

	foreach ($arr as $value) {
		echo $value.", ";
	}
}

echo "Задать массив из 7-ми элементов через предварительное описание типа, заполнить его случайными значениями в одном цикле, а в другом цикле вывести эти значения на экран.<br>";
randomMas();
echo "<br>";

/*Задать двумерный массив размерностью m на n (MxN) элементов (m и n вынести в область определения констант), заполнить его случайными значениями и вывести их на экран уже после того, как весь массив будет заполнен (т.е. заполнять и выводить в разных группах циклов).*/

function doubleMas($m,$n)
{
	define('m', $m);
	define('n', $n);

	for ($i=1; $i<=m; $i++){
		for ($j=1; $j<=n; $j++) { 
			$arr[$i][$j]=rand(1,10);
		}
	}
	
	foreach ($arr as $key => $value) {
		foreach ($value as $key2 => $value2) {
			echo "$value2 <br>";
		}
	}
}

echo "<br>Задать двумерный массив размерностью m на n (MxN) элементов (m и n вынести в область определения констант), заполнить его случайными значениями и вывести их на экран уже после того, как весь массив будет заполнен (т.е. заполнять и выводить в разных группах циклов).<br>";
doubleMas(3,4);
echo "<br>";

/*Задайте случайным образом массив из N элементов. Выведите его на экран "ёлочкой".*/

function christmasTree($n)
{
	for ($i=1; $i<=$n; $i++){
		$arr[$i]=$i;
	}
	$a=1;
	for ($i=1; $arr[$a]<$n; $i++){
		for ($j=0; $j<$i; $j++){
			echo $arr[$a];
			if ($a<$n){
				$a++; 
			}else{
				break;
			}
		}
		echo "<br>";
	}
}

echo "<br>Задайте случайным образом массив из N элементов. Выведите его на экран \"ёлочкой\"<br>";
christmasTree(9);
echo "<br>";

/*Второй вариант - сделайте то же самое, но не используйте массив*/

function christmasTree2($n)
{
	$a=1;
	for ($i=1; $a<$n; $i++) {
		for ($j=0; $j!=$i; $j++){
			echo $a;
			if ($a<$n){
				$a++; 
			}else{
				break;
			}
			
		}
		echo "<br>";
	}

}

echo "<br>Второй вариант - сделайте то же самое, но не используйте массив<br>";
christmasTree2(9);
echo "<br>";

/*Задайте случайным образом массив из N элементов (целых чисел). Найдите максимальное число и напечатайте его.*/

function maxElem($n)
{
	for ($i=0; $i<$n; $i++){
		$arr[$i]=rand(1,10);
		echo $arr[$i]."<br>";
	}

	$max=0;
	for ($i=0; $i!=sizeof($arr); $i++){
		if ($arr[0]<=$arr[$i]){
			if ($max<$arr[$i]){
				$max=$arr[$i];
			}
		}
	}

	echo "<br> Максимальный элемент - ";
	echo $max;
}

echo "<br>Задайте случайным образом массив из N элементов (целых чисел). Найдите максимальное число и напечатайте его<br>";
maxElem(10);
echo "<br>";

/*Задайте случайным образом массив из 20-ти элементов (целых чисел). Найдите минимальное число и напечатайте его.*/

function minElem()
{
	for ($i=1; $i<=20; $i++){
		$arr[$i]=rand(-99,99);
		echo $arr[$i]."<br>";
	}

	$min=$arr[1];
	for ($i=1; $i<=sizeof($arr); $i++){
		if ($min>$arr[$i]){
			$min=$arr[$i];
		}
	}

	echo "<br> Минимальный элемент: ".$min;
}

echo "<br>Задайте случайным образом массив из 20-ти элементов (целых чисел). Найдите минимальное число и напечатайте его.<br>";
minElem(10);
echo "<br>";


/*Даны два массива по 20 элементов каждый (заполните случайными числами, так чтобы среди элементов массива при очередном запуске программы могли встретиться и отрицательные и положительные числа).
Сравните каждый 3-ий элемент 1-ого массива с каждый 2-ым элементов 2-ого массива - сравнение проводите пока не закончится та выборка, которая короче.*/

function comp()
{

	for ($i=0; $i<=20; $i++){
		$arr[]=rand(-9,9);
		$arr2[]=rand(-9,9);
	}

	foreach ($arr as $value) {
		echo $value.", ";
	}

	echo "<br>";

	foreach ($arr2 as $value) {
		echo $value.", ";
	}

	echo "<br> <br>";

	$i=2;
	$j=1;
	do {
		if ($arr[$i]>$arr2[$j]){
			echo "$arr[$i] больше $arr2[$j] <br>";
		}elseif ($arr[$i]<$arr2[$j]){
			echo "$arr[$i] меньше $arr2[$j] <br>";
		}
		$i+=3;
		$j+=2;
	} while ($i<count($arr));

}

echo "<br>Даны два массива по 20 элементов каждый (заполните случайными числами, так чтобы среди элементов массива при очередном запуске программы могли встретиться и отрицательные и положительные числа).
Сравните каждый 3-ий элемент 1-ого массива с каждый 2-ым элементов 2-ого массива - сравнение проводите пока не закончится та выборка, которая короче.<br>";
comp();
echo "<br>";

/*Создайте функцию, которая принимает на вход массив случайных чисел из диапазона [5..12]. Обходит этот массив и делает для каждого элемента следующее (пусть она оказывает побочный эффект прямо в своём теле):
Если это число равно 5 -- то выведете на экран строку "пять", если 6 -- то строку "шесть", если 7 то число "7", иначе -- строку "какое-то другое число".
Используйте для решения задачи оператор switch*/

function rndMas($n)
{
	for ($i=1; $i<=$n; $i++){
		$arr[$i]=rand(5,12);
	}
	return $arr;
}

function sideEffect(array $arr)
{
	for ($i=1; $i<=count($arr); $i++){
		switch ($arr[$i]){
			case '5':
				echo "пять <br>";
				break;
			case '6':
				echo "шесть <br>";
				break;
			case '7':
				echo "7 <br>";
				break;
			default:
				echo rand(1,10)."<br>";
				break;
		}
	}
}

echo "<br>Создайте функцию, которая принимает на вход массив случайных чисел из диапазона [5..12]. Обходит этот массив и делает для каждого элемента следующее (пусть она оказывает побочный эффект прямо в своём теле):
Если это число равно 5 -- то выведете на экран строку \"пять\", если 6 -- то строку \"шесть\", если 7 то число \"7\", иначе -- строку \"какое-то другое число\".
Используйте для решения задачи оператор switch <br>";
sideEffect(rndMas(9));
echo "<br>";

/*Есть два массива "a" и "b". На вход вашей программе подаётся массив "a" случайных чисел (10 элементов) из диапазона от 1 до 20. Задача: вывести на экран все числа, которые не содержатся в массиве "b"
$b = [12, 5, 17, 6, 4];*/

function twoMas()
{
	$b = [12,5,17,6,4];

	for ($i=1; $i<=10; $i++){
		$a[$i]=rand(1,20);
	}

	for ($i=1; $i<=count($a); $i++){
		$check=true;
		for ($j=0; $j<count($b); $j++) { 
			if ($a[$i]==$b[$j]){
				$check=false;
				break;
			}
		}
		if ($check==true){
				echo $a[$i]."<br>";
		}
	}

	print_r($a);
	echo "<br>";
	print_r($b);
}

echo "<br>Есть два массива \"a\" и \"b\". На вход вашей программе подаётся массив \"a\" случайных чисел (10 элементов) из диапазона от 1 до 20. Задача: вывести на экран все числа, которые не содержатся в массиве \"b\" \$b = [12, 5, 17, 6, 4]; <br>";
twoMas();			
echo "<br>";
	


/*С использованием in_array()*/

function twoMas2(){
	$b = [12, 5, 17, 6, 4];

	for ($i=1; $i<=10; $i++){
		$a[$i]=rand(1,20);
	}

	for ($i=1; $i<=count($a); $i++){
			if (!in_array($a[$i], $b)){
				echo $a[$i]."<br>";
			}		

	}
	print_r($a);
	echo "<br>";
	print_r($b);
}

echo "<br>С использованием in_array()<br>";
twoMas2();
echo "<br>";
 ?>
